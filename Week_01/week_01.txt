//creating database for week 1
CREATE SCHEMA dannys_diner;

//Creating sales table

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

//Creating menu table

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

//Creating member table 

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

//Adding entries to sales table

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
  
  
// A dding entries to menu table
  
  
INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  
  
//Adding entries to member table


INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');
  
  
// What is the total amount each customer spent at the restaurant?
  
select customer_id, sum(price) as total_sales from sales inner join menu on sales.product_id = menu.product_id group by customer_id order by customer_id asc;

// How many days has each customer visited the restaurant?

select customer_id, count(distinct order_date) from sales group by customer_id;

// What was the first item from the menu purchased by each customer?

// What is the most purchased item on the menu how many times was it purchased by all customers?

select product_name, count(sales.product_id) as highest_ordered from sales inner join menu on sales.product_id = menu.product_id group by product_name order by highest_ordered desc limit 1;

// Frequency of each customer orders any product

select customer_id, count(product_id) as Number_of_purchases from sales group by customer_id;

//Number of times each product gets ordered

select product_name, count(sales.product_id) as highest_ordered from sales inner join menu on sales.product_id = menu.product_id group by product_name order by highest_ordered limit 1;

//Which item was the most popular for each customer?

